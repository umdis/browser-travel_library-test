// <auto-generated />
using System;
using BrowserTravel.Library.Infraestructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BrowserTravel.Library.Infraestructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230520012513_insert_seed_authors_books")]
    partial class insert_seed_authors_books
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.Property<int>("BooksId")
                        .HasColumnType("int");

                    b.Property<int>("AuthorsId")
                        .HasColumnType("int");

                    b.HasKey("BooksId", "AuthorsId");

                    b.HasIndex("AuthorsId");

                    b.ToTable("AuthorBook");

                    b.HasData(
                        new
                        {
                            BooksId = 1,
                            AuthorsId = 1
                        },
                        new
                        {
                            BooksId = 2,
                            AuthorsId = 1
                        },
                        new
                        {
                            BooksId = 3,
                            AuthorsId = 1
                        },
                        new
                        {
                            BooksId = 4,
                            AuthorsId = 2
                        });
                });

            modelBuilder.Entity("BrowserTravel.Library.Entities.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LastName")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Name")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LastName = "Kafka",
                            Name = "Franz"
                        },
                        new
                        {
                            Id = 2,
                            LastName = "Bauman",
                            Name = "Zygmunt"
                        });
                });

            modelBuilder.Entity("BrowserTravel.Library.Entities.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ISBN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdEditorial")
                        .HasColumnType("int");

                    b.Property<int>("NumberPages")
                        .HasColumnType("int");

                    b.Property<string>("Synopsis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("IdEditorial");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ISBN = "9780435910105",
                            IdEditorial = 1,
                            NumberPages = 546,
                            Synopsis = "...",
                            Title = "African Folktales"
                        },
                        new
                        {
                            Id = 2,
                            ISBN = "9781906523374",
                            IdEditorial = 2,
                            NumberPages = 200,
                            Synopsis = "...",
                            Title = "984 by George Orwell"
                        },
                        new
                        {
                            Id = 3,
                            ISBN = "9780394721170",
                            IdEditorial = 2,
                            NumberPages = 105,
                            Synopsis = "...",
                            Title = "The Lord of the Rings by J.R.R. Tolkien"
                        },
                        new
                        {
                            Id = 4,
                            ISBN = "9780813190761",
                            IdEditorial = 1,
                            NumberPages = 97,
                            Synopsis = "...",
                            Title = "The Kite Runner by Khaled Hosseini"
                        });
                });

            modelBuilder.Entity("BrowserTravel.Library.Entities.Models.Editorial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Site")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Id");

                    b.ToTable("Editorials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Sol naciente",
                            Site = "Cali"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Visión objetiva",
                            Site = "Barranquilla"
                        });
                });

            modelBuilder.Entity("BrowserTravel.Library.Entities.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin",
                            State = true
                        },
                        new
                        {
                            Id = 2,
                            Name = "Author",
                            State = true
                        });
                });

            modelBuilder.Entity("BrowserTravel.Library.Entities.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("Salt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("SaltedAndHashedPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdRol");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateAt = new DateTime(2023, 5, 19, 20, 25, 12, 567, DateTimeKind.Local).AddTicks(4473),
                            Email = "admin@email.com",
                            IdRol = 1,
                            Name = "Admin user",
                            Salt = new byte[] { 46, 231, 97, 52, 77, 29, 170, 96, 140, 61, 124, 108, 11, 29, 76, 191 },
                            SaltedAndHashedPassword = "LudhNE0dqmCMPXxsCx1Mv4sc5FtR5iQroQykDwoQEx9WRgq2",
                            State = true
                        });
                });

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.HasOne("BrowserTravel.Library.Entities.Models.Author", null)
                        .WithMany()
                        .HasForeignKey("AuthorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BrowserTravel.Library.Entities.Models.Book", null)
                        .WithMany()
                        .HasForeignKey("BooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BrowserTravel.Library.Entities.Models.Book", b =>
                {
                    b.HasOne("BrowserTravel.Library.Entities.Models.Editorial", "Editorial")
                        .WithMany()
                        .HasForeignKey("IdEditorial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Editorial");
                });

            modelBuilder.Entity("BrowserTravel.Library.Entities.Models.User", b =>
                {
                    b.HasOne("BrowserTravel.Library.Entities.Models.Rol", "Rol")
                        .WithMany("Users")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("BrowserTravel.Library.Entities.Models.Rol", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
